{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nguyenxuannguyen/movie-mern/admin-app/src/containers/Films/index.js\",\n    _s = $RefreshSig$();\n\nimport { Layout } from \"../../components/Layout\";\nimport { Container, Row, Col, Modal, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { Input } from \"../../components/UI/Input\";\nimport { getAllCategory } from \"../../actions\";\nexport const Film = props => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [name, setName] = useState('');\n  const [ename, setEname] = useState('');\n  const [img, setImg] = useState('');\n  const [largerImg, setLargerImg] = useState('');\n  const [url, setUrl] = useState('');\n  const [description, setDescription] = useState('');\n  const [categoryId, setCategoryId] = useState(\"\");\n  const category = useSelector(state => state.category);\n  const product = useSelector(state => state.product);\n  const dispatch = useDispatch();\n  console.log(category);\n  useEffect(() => {\n    console.log('category.js');\n    dispatch(getAllCategory());\n  }, []);\n\n  const handleClose = () => {\n    // console.log(cat)\n    setEname('');\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name\n      });\n    }\n\n    return options;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Films\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handleShow,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add New Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: \"Name\",\n          value: name,\n          placeholder: \"Enter new name film\",\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"English name\",\n          value: ename,\n          placeholder: \"Enter new english name film\",\n          onChange: e => {\n            setEname(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"image\",\n          value: img,\n          placeholder: \"Enter new img\",\n          onChange: e => {\n            setImg(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Larger img\",\n          value: largerImg,\n          placeholder: \"Enter new larger img film\",\n          onChange: e => {\n            setLargerImg(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Description\",\n          value: description,\n          placeholder: \"Enter new description\",\n          onChange: e => {\n            setDescription(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          value: categoryId,\n          onChange: e => setCategoryId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"select category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), createCategoryList(category.categoryList).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.name\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Film, \"vX0BG5vXbkD+lBsNrg9tE02At1I=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Film;\n\nvar _c;\n\n$RefreshReg$(_c, \"Film\");","map":{"version":3,"sources":["/Users/nguyenxuannguyen/movie-mern/admin-app/src/containers/Films/index.js"],"names":["Layout","Container","Row","Col","Modal","Button","useDispatch","useSelector","useEffect","useState","Input","getAllCategory","Film","props","show","setShow","name","setName","ename","setEname","img","setImg","largerImg","setLargerImg","url","setUrl","description","setDescription","categoryId","setCategoryId","category","state","product","dispatch","console","log","handleClose","handleShow","createCategoryList","categories","options","push","value","_id","display","justifyContent","e","target","categoryList","map","option"],"mappings":"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","sourcesContent":["import { Layout } from \"../../components/Layout\";\nimport { Container, Row, Col, Modal, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { Input } from \"../../components/UI/Input\";\nimport { getAllCategory } from \"../../actions\";\n\nexport const Film = (props) => {\n    const [show, setShow] = useState(false);\n    const [name, setName] = useState('')\n    const [ename, setEname] = useState('')\n    const [img, setImg] = useState('')\n    const [largerImg, setLargerImg] = useState('')\n    const [url, setUrl] = useState('')\n    const [description, setDescription] = useState('')\n    const [categoryId, setCategoryId] = useState(\"\");\n    const category = useSelector((state) => state.category);\n    const product = useSelector((state) => state.product);\n    const dispatch = useDispatch();\n    console.log(category)\n    useEffect(() => {\n        console.log('category.js')\n        dispatch(getAllCategory())\n    }, [])\n    const handleClose = () => {\n\n        // console.log(cat)\n        setEname('')\n        setShow(false)\n    };\n    const handleShow = () => setShow(true);\n\n    const createCategoryList = (categories, options = []) => {\n        for (let category of categories) {\n            options.push({ value: category._id, name: category.name });\n        }\n        return options;\n    };\n    return (\n        <Layout sidebar>\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                            <h3>Films</h3>\n                            <button className=\"btn btn-primary\" onClick={handleShow}>Add</button>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Add New Category</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Input\n                        label=\"Name\"\n                        value={name}\n                        placeholder='Enter new name film'\n                        onChange={(e) => { setName(e.target.value) }}\n                    />\n                    <Input\n                        label=\"English name\"\n                        value={ename}\n                        placeholder='Enter new english name film'\n                        onChange={(e) => { setEname(e.target.value) }}\n                    />\n                    <Input\n                        label=\"image\"\n                        value={img}\n                        placeholder='Enter new img'\n                        onChange={(e) => { setImg(e.target.value) }}\n                    />\n                    <Input\n                        label=\"Larger img\"\n                        value={largerImg}\n                        placeholder='Enter new larger img film'\n                        onChange={(e) => { setLargerImg(e.target.value) }}\n                    />\n                    <Input\n                        label=\"Description\"\n                        value={description}\n                        placeholder='Enter new description'\n                        onChange={(e) => { setDescription(e.target.value) }}\n                    />\n                    <select\n                        className=\"form-control\"\n                        value={categoryId}\n                        onChange={(e) => setCategoryId(e.target.value)}\n                    >\n                        <option>select category</option>\n                        {createCategoryList(category.categoryList).map((option) => (\n                            <option key={option.value} value={option.value}>\n                                {option.name}\n                            </option>\n                        ))}\n                    </select>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Layout>\n    )\n} "]},"metadata":{},"sourceType":"module"}