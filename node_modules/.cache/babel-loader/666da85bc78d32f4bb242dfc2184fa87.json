{"ast":null,"code":"import { actorConstants } from \"../actions/constants\";\nconst initState = {\n  actorList: [],\n  loading: false,\n  error: null\n};\n\nconst buildNewActor = (parentId, actors, actor) => {\n  let myActors = [];\n\n  for (let act of actors) {\n    const newActor = {\n      _id: actor._id,\n      name: actor.name,\n      slug: actor.slug\n    };\n    myActors.push({ ...act\n    });\n  }\n\n  return myActors;\n};\n\nexport default ((state = initState, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case actorConstants.GET_ALL_ACTORS_SUCCESS:\n      state = { ...state,\n        actorList: action.payload.actorList\n      };\n      break;\n\n    case actorConstants.ADD_NEW_ACTORS_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case actorConstants.ADD_NEW_ACTORS_SUCCESS:\n      const actor = action.payload.actor;\n      const updatedActor = buildNewActor(actor._id, state.actorList, actor);\n      console.log('updated actor', updatedActor);\n      state = { ...state,\n        actorList: updatedActor,\n        loading: false\n      };\n      break;\n\n    case actorConstants.ADD_NEW_ACTORS_FAILURE:\n      state = {\n        initState\n      };\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/Users/nguyenxuannguyen/movie-mern/admin-app/src/reducers/actor.reducers.js"],"names":["actorConstants","initState","actorList","loading","error","buildNewActor","parentId","actors","actor","myActors","act","newActor","_id","name","slug","push","state","action","console","log","type","GET_ALL_ACTORS_SUCCESS","payload","ADD_NEW_ACTORS_REQUEST","ADD_NEW_ACTORS_SUCCESS","updatedActor","ADD_NEW_ACTORS_FAILURE"],"mappings":"AAAA,SAASA,cAAT,QAA+B,sBAA/B;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,EADG;AAEdC,EAAAA,OAAO,EAAE,KAFK;AAGdC,EAAAA,KAAK,EAAE;AAHO,CAAlB;;AAMA,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAUC,MAAV,EAAkBC,KAAlB,KAA4B;AAC9C,MAAIC,QAAQ,GAAG,EAAf;;AAEA,OAAI,IAAIC,GAAR,IAAeH,MAAf,EAAuB;AACnB,UAAMI,QAAQ,GAAG;AACbC,MAAAA,GAAG,EAAEJ,KAAK,CAACI,GADE;AAEbC,MAAAA,IAAI,EAAEL,KAAK,CAACK,IAFC;AAGbC,MAAAA,IAAI,EAAEN,KAAK,CAACM;AAHC,KAAjB;AAKAL,IAAAA,QAAQ,CAACM,IAAT,CAAc,EACV,GAAGL;AADO,KAAd;AAGH;;AACD,SAAOD,QAAP;AACH,CAdD;;AAgBA,gBAAe,CAACO,KAAK,GAAGf,SAAT,EAAoBgB,MAApB,KAA+B;AAE1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKpB,cAAc,CAACqB,sBAApB;AACIL,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJd,QAAAA,SAAS,EAAEe,MAAM,CAACK,OAAP,CAAepB;AAFtB,OAAR;AAIA;;AACJ,SAAKF,cAAc,CAACuB,sBAApB;AACIP,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJb,QAAAA,OAAO,EAAE;AAFL,OAAR;AAIA;;AACJ,SAAKH,cAAc,CAACwB,sBAApB;AACI,YAAMhB,KAAK,GAAGS,MAAM,CAACK,OAAP,CAAed,KAA7B;AACA,YAAMiB,YAAY,GAAGpB,aAAa,CAACG,KAAK,CAACI,GAAP,EAAWI,KAAK,CAACd,SAAjB,EAA4BM,KAA5B,CAAlC;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BM,YAA7B;AACAT,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJd,QAAAA,SAAS,EAAEuB,YAFP;AAGJtB,QAAAA,OAAO,EAAE;AAHL,OAAR;AAKA;;AACJ,SAAKH,cAAc,CAAC0B,sBAApB;AACIV,MAAAA,KAAK,GAAG;AACJf,QAAAA;AADI,OAAR;AAGA;AA3BR;;AA6BA,SAAOe,KAAP;AACH,CAlCD","sourcesContent":["import { actorConstants } from \"../actions/constants\";\n\nconst initState = {\n    actorList: [],\n    loading: false,\n    error: null\n}\n\nconst buildNewActor = (parentId,actors, actor) => {\n    let myActors = []\n\n    for(let act of actors) {\n        const newActor = {\n            _id: actor._id,\n            name: actor.name,\n            slug: actor.slug,\n        };\n        myActors.push({\n            ...act,\n        });\n    }\n    return myActors\n}\n\nexport default (state = initState, action) => {\n\n    console.log(action);\n\n    switch (action.type) {\n        case actorConstants.GET_ALL_ACTORS_SUCCESS:\n            state = {\n                ...state,\n                actorList: action.payload.actorList\n            }\n            break;\n        case actorConstants.ADD_NEW_ACTORS_REQUEST:\n            state = {\n                ...state,\n                loading: true,\n            }\n            break;\n        case actorConstants.ADD_NEW_ACTORS_SUCCESS:\n            const actor = action.payload.actor\n            const updatedActor = buildNewActor(actor._id,state.actorList, actor)\n            console.log('updated actor', updatedActor)\n            state = {\n                ...state,\n                actorList: updatedActor,\n                loading: false\n            }  \n            break;\n        case actorConstants.ADD_NEW_ACTORS_FAILURE:\n            state = {\n                initState\n            }\n            break;\n    }\n    return state;\n}"]},"metadata":{},"sourceType":"module"}