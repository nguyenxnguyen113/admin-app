{"ast":null,"code":"import axios from \"../helpers.js/axios\";\nimport { authConstants } from \"./constants\";\nexport const login = user => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post(`/admin/signin`, { ...user\n    });\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};\n\nconst isUserLoggedIn = () => {\n  return async dispatch => {\n    if (token) {\n      dispatch({\n        payload: {\n          token\n        }\n      });\n    } else {\n      dispatch({\n        payload: {\n          authentiacat: false\n        }\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/nguyenxuannguyen/movie-mern/admin-app/src/actions/auth.actions.js"],"names":["axios","authConstants","login","user","dispatch","type","LOGIN_REQUEST","res","post","status","token","data","localStorage","setItem","LOGIN_SUCCESS","payload","LOGIN_FAILURE","error","isUserLoggedIn","authentiacat"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,SAASC,aAAT,QAA8B,aAA9B;AAEA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAU;AAC7B,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,aAAa,CAACK;AAAtB,KAAD,CAAR;AACA,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAY,eAAZ,EAA4B,EAC5C,GAAGL;AADyC,KAA5B,CAAlB;;AAIA,QAAII,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB,YAAM;AAAEC,QAAAA,KAAF;AAASP,QAAAA;AAAT,UAAkBI,GAAG,CAACI,IAA5B;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAN,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,aAAa,CAACa,aADb;AAEPC,QAAAA,OAAO,EAAE;AACPL,UAAAA,KADO;AAEPP,UAAAA;AAFO;AAFF,OAAD,CAAR;AAOD,KAVD,MAUO;AACL,UAAII,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtBL,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEJ,aAAa,CAACe,aADb;AAEPD,UAAAA,OAAO,EAAE;AAAEE,YAAAA,KAAK,EAAEV,GAAG,CAACI,IAAJ,CAASM;AAAlB;AAFF,SAAD,CAAR;AAID;AACF;AACF,GAxBD;AAyBD,CA1BM;;AA4BP,MAAMC,cAAc,GAAG,MAAM;AAC3B,SAAO,MAAOd,QAAP,IAAoB;AACzB,QAAIM,KAAJ,EAAW;AACTN,MAAAA,QAAQ,CAAC;AACPW,QAAAA,OAAO,EAAE;AACPL,UAAAA;AADO;AADF,OAAD,CAAR;AAKD,KAND,MAMO;AACLN,MAAAA,QAAQ,CAAC;AACPW,QAAAA,OAAO,EAAE;AACPI,UAAAA,YAAY,EAAE;AADP;AADF,OAAD,CAAR;AAKD;AACF,GAdD;AAeD,CAhBD","sourcesContent":["import axios from \"../helpers.js/axios\";\nimport { authConstants } from \"./constants\";\n\nexport const login = (user) => {\n  return async (dispatch) => {\n    dispatch({ type: authConstants.LOGIN_REQUEST });\n    const res = await axios.post(`/admin/signin`, {\n      ...user,\n    });\n\n    if (res.status === 200) {\n      const { token, user } = res.data;\n      localStorage.setItem(\"token\", token);\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user,\n        },\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: { error: res.data.error },\n        });\n      }\n    }\n  };\n};\n\nconst isUserLoggedIn = () => {\n  return async (dispatch) => {\n    if (token) {\n      dispatch({\n        payload: {\n          token,\n        }\n      })\n    } else {\n      dispatch({\n        payload: {\n          authentiacat: false,\n        }\n      })\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}