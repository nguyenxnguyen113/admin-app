{"ast":null,"code":"import axios from \"../helpers.js/axios\";\nimport { authConstants, userConstants } from \"./constants\";\nexport const signup = user => {\n  return async dispatch => {\n    dispatch({\n      type: userConstants.USER_REGISTER_REQUEST\n    });\n    const res = await axios.post(`/admin/signup`, { ...user\n    });\n\n    if (res.status === 200) {\n      const {\n        message\n      } = res.data;\n      dispatch({\n        type: userConstants.USER_REGISTER_SUCCESS,\n        payload: {\n          message\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: userConstants.USER_REGISTER_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/nguyenxuannguyen/movie-mern/admin-app/src/actions/user.actions.js"],"names":["axios","authConstants","userConstants","signup","user","dispatch","type","USER_REGISTER_REQUEST","res","post","status","message","data","USER_REGISTER_SUCCESS","payload","USER_REGISTER_FAILURE","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,aAA7C;AAEA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAU;AAC9B,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,aAAa,CAACK;AAAtB,KAAD,CAAR;AACA,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAY,eAAZ,EAA4B,EAC5C,GAAGL;AADyC,KAA5B,CAAlB;;AAIA,QAAII,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB,YAAM;AAAEC,QAAAA;AAAF,UAAcH,GAAG,CAACI,IAAxB;AACAP,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,aAAa,CAACW,qBADb;AAEPC,QAAAA,OAAO,EAAE;AACLH,UAAAA;AADK;AAFF,OAAD,CAAR;AAMD,KARD,MAQO;AACL,UAAIH,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtBL,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEJ,aAAa,CAACa,qBADb;AAEPD,UAAAA,OAAO,EAAE;AAAEE,YAAAA,KAAK,EAAER,GAAG,CAACI,IAAJ,CAASI;AAAlB;AAFF,SAAD,CAAR;AAID;AACF;AACF,GAtBD;AAuBD,CAxBM","sourcesContent":["import axios from \"../helpers.js/axios\";\nimport { authConstants, userConstants } from \"./constants\";\n\nexport const signup = (user) => {\n  return async (dispatch) => {\n    dispatch({ type: userConstants.USER_REGISTER_REQUEST });\n    const res = await axios.post(`/admin/signup`, {\n      ...user,\n    });\n\n    if (res.status === 200) {\n      const { message } = res.data;\n      dispatch({\n        type: userConstants.USER_REGISTER_SUCCESS,\n        payload: {\n            message\n        },\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: userConstants.USER_REGISTER_FAILURE,\n          payload: { error: res.data.error },\n        });\n      }\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}