{"ast":null,"code":"// import category from \"../../../movie-backend/src/models/category\";\nimport axios from \"../helpers.js/axios\";\nimport { actorConstants } from \"./constants\";\nexport const getAllActor = () => {\n  return async dispatch => {\n    dispatch({\n      type: actorConstants.GET_ALL_ACTORS_REQUEST\n    });\n    const res = await axios.get(`/actor/getActor`);\n    console.log(res);\n    const {\n      actors\n    } = res.data;\n\n    if (res.status === 200) {\n      dispatch({\n        type: actorConstants.GET_ALL_ACTORS_SUCCESS,\n        payload: {\n          actorList: actors\n        }\n      });\n    } else {\n      dispatch({\n        type: actorConstants.GET_ALL_ACTORS_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};\nexport const addActor = form => {\n  return async dispatch => {\n    dispatch({\n      type: actorConstants.ADD_NEW_ACTORS_REQUEST\n    });\n\n    try {\n      const res = await axios.post(`/actor/create`, form);\n\n      if (res.status === 200) {\n        dispatch({\n          type: actorConstants.ADD_NEW_ACTORS_SUCCESS,\n          payload: {\n            actorConstants: res.data.country\n          }\n        });\n      } else {\n        dispatch({\n          type: actorConstants.ADD_NEW_ACTORS_FAILURE,\n          payload: res.data.error\n        });\n      }\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n};","map":{"version":3,"sources":["/Users/nguyenxuannguyen/movie-mern/admin-app/src/actions/actor.actions.js"],"names":["axios","actorConstants","getAllActor","dispatch","type","GET_ALL_ACTORS_REQUEST","res","get","console","log","actors","data","status","GET_ALL_ACTORS_SUCCESS","payload","actorList","GET_ALL_ACTORS_FAILURE","error","addActor","form","ADD_NEW_ACTORS_REQUEST","post","ADD_NEW_ACTORS_SUCCESS","country","ADD_NEW_ACTORS_FAILURE","response"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,SAASC,cAAT,QAA+B,aAA/B;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC7B,SAAO,MAAOC,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEH,cAAc,CAACI;AADhB,KAAD,CAAR;AAGA,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,iBAAX,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAaJ,GAAG,CAACK,IAAvB;;AACA,QAAIL,GAAG,CAACM,MAAJ,KAAe,GAAnB,EAAwB;AACpBT,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEH,cAAc,CAACY,sBADhB;AAELC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,SAAS,EAAEL;AAAb;AAFJ,OAAD,CAAR;AAIH,KALD,MAKO;AACHP,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEH,cAAc,CAACe,sBADhB;AAELF,QAAAA,OAAO,EAAE;AAACG,UAAAA,KAAK,EAAEX,GAAG,CAACK,IAAJ,CAASM;AAAjB;AAFJ,OAAD,CAAR;AAIH;AACJ,GAlBD;AAmBH,CApBM;AAsBP,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AAC9B,SAAO,MAAMhB,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,cAAc,CAACmB;AAAvB,KAAD,CAAR;;AACA,QAAI;AACA,YAAMd,GAAG,GAAG,MAAMN,KAAK,CAACqB,IAAN,CAAY,eAAZ,EAA4BF,IAA5B,CAAlB;;AACA,UAAIb,GAAG,CAACM,MAAJ,KAAe,GAAnB,EAAwB;AACpBT,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEH,cAAc,CAACqB,sBADhB;AAELR,UAAAA,OAAO,EAAE;AAAEb,YAAAA,cAAc,EAAEK,GAAG,CAACK,IAAJ,CAASY;AAA3B;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACHpB,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEH,cAAc,CAACuB,sBADhB;AAELV,UAAAA,OAAO,EAAER,GAAG,CAACK,IAAJ,CAASM;AAFb,SAAD,CAAR;AAIH;AACJ,KAbD,CAaE,OAAOA,KAAP,EAAc;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACQ,QAAlB;AACH;AAEJ,GAnBD;AAoBH,CArBM","sourcesContent":["// import category from \"../../../movie-backend/src/models/category\";\nimport axios from \"../helpers.js/axios\";\nimport { actorConstants } from \"./constants\";\n\nexport const getAllActor = () => {\n    return async (dispatch) => {\n        dispatch({\n            type: actorConstants.GET_ALL_ACTORS_REQUEST,\n        })\n        const res = await axios.get(`/actor/getActor`)\n        console.log(res)\n        const { actors } = res.data\n        if (res.status === 200) {\n            dispatch({\n                type: actorConstants.GET_ALL_ACTORS_SUCCESS,\n                payload: { actorList: actors }\n            })\n        } else {\n            dispatch({\n                type: actorConstants.GET_ALL_ACTORS_FAILURE,\n                payload: {error: res.data.error}\n            })\n        }\n    }\n}\n\nexport const addActor = (form) => {\n    return async dispatch => {\n        dispatch({ type: actorConstants.ADD_NEW_ACTORS_REQUEST });\n        try {\n            const res = await axios.post(`/actor/create`, form);\n            if (res.status === 200) {\n                dispatch({\n                    type: actorConstants.ADD_NEW_ACTORS_SUCCESS,\n                    payload: { actorConstants: res.data.country }\n                });\n            } else {\n                dispatch({\n                    type: actorConstants.ADD_NEW_ACTORS_FAILURE,\n                    payload: res.data.error\n                });\n            }\n        } catch (error) {   \n            console.log(error.response);\n        }\n\n    }\n}"]},"metadata":{},"sourceType":"module"}