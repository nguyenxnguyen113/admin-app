{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nguyenxuannguyen/movie-mern/admin-app/src/containers/Films/index.js\",\n    _s = $RefreshSig$();\n\nimport { Layout } from \"../../components/Layout\";\nimport { Container, Row, Col, Modal, Button, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { Input } from \"../../components/UI/Input\";\nimport { getAllCategory, addFilm, getAllActor, getAllCountry } from \"../../actions\";\nexport const Film = props => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [name, setName] = useState('');\n  const [ename, setEname] = useState('');\n  const [img, setImg] = useState('');\n  const [largerImg, setLargerImg] = useState('');\n  const [url, setUrl] = useState('');\n  const [description, setDescription] = useState('');\n  const [categoryId, setCategoryId] = useState(\"\");\n  const [actorId, setActorId] = useState(\"\");\n  const [countryId, setCountryId] = useState(\"\");\n  const category = useSelector(state => state.category);\n  const product = useSelector(state => state.product);\n  const actor = useSelector(state => state.actor);\n  const country = useSelector(state => state.country);\n  console.log(product);\n  const dispatch = useDispatch();\n  console.log(category);\n  useEffect(() => {\n    console.log('category.js');\n    dispatch(getAllCategory());\n    dispatch(getAllActor());\n    dispatch(getAllCountry());\n  }, []);\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append(\"name\", name);\n    form.append(\"ename\", ename);\n    form.append(\"img\", img);\n    form.append(\"largerImg\", largerImg);\n    form.append(\"description\", description);\n\n    for (let category of categoryId) {\n      form.append(\"category\", category);\n    }\n\n    for (let category of actorId) {\n      form.append(\"category\", category);\n    }\n\n    for (let category of countryId) {\n      form.append(\"category\", category);\n    } // const newFilm = {\n    //     name: name,\n    //     ename: ename,\n    //     img: img,\n    //     largerImg: largerImg,\n    //     url: url,\n    //     description: description,\n    //     category: categoryId,\n    //     actor: actorId,\n    //     country: countryId\n    // } \n\n\n    dispatch(addFilm(form)); // console.log(cat)\n\n    setEname('');\n    setName('');\n    setImg('');\n    setLargerImg('');\n    setUrl('');\n    setDescription('');\n    setCategoryId('');\n    setCountryId('');\n    setActorId('');\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name\n      });\n    }\n\n    return options;\n  };\n\n  const createCountryList = (countries, options = []) => {\n    for (let country of countries) {\n      options.push({\n        value: country._id,\n        name: country.name\n      });\n    }\n\n    return options;\n  };\n\n  const createActorList = (actors, options = []) => {\n    for (let actor of actors) {\n      options.push({\n        value: actor._id,\n        name: actor.name\n      });\n    }\n\n    return options;\n  };\n\n  const renderFilms = () => {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      style: {\n        fontSize: 12\n      },\n      responsive: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"English name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: product.products.length > 0 ? product.products.map(film => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: film.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: film.ename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: film.category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 23\n          }, this)]\n        }, film._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Films\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handleShow,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add New Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: \"Name\",\n          value: name,\n          placeholder: \"Enter new name film\",\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"English name\",\n          value: ename,\n          placeholder: \"Enter new english name film\",\n          onChange: e => {\n            setEname(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"image\",\n          value: img,\n          placeholder: \"Enter new img\",\n          onChange: e => {\n            setImg(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Larger img\",\n          value: largerImg,\n          placeholder: \"Enter new larger img film\",\n          onChange: e => {\n            setLargerImg(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"URL film\",\n          value: url,\n          placeholder: \"Enter url\",\n          onChange: e => {\n            setUrl(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Description\",\n          value: description,\n          placeholder: \"Enter new description\",\n          onChange: e => {\n            setDescription(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), \"Select category\", /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          value: categoryId,\n          onChange: e => setCategoryId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"select category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), createCategoryList(category.categoryList).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.name\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), \"Select country\", /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          value: countryId,\n          onChange: e => setCountryId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"select country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), createCountryList(country.countryList).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.name\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), \"Select actor\", /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          value: actorId,\n          onChange: e => setActorId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"select actor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), createActorList(actor.actorList).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.name\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Film, \"gyZx4ZEgEKVGsIo2bDn5TXJzKxU=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Film;\n\nvar _c;\n\n$RefreshReg$(_c, \"Film\");","map":{"version":3,"sources":["/Users/nguyenxuannguyen/movie-mern/admin-app/src/containers/Films/index.js"],"names":["Layout","Container","Row","Col","Modal","Button","Table","useDispatch","useSelector","useEffect","useState","Input","getAllCategory","addFilm","getAllActor","getAllCountry","Film","props","show","setShow","name","setName","ename","setEname","img","setImg","largerImg","setLargerImg","url","setUrl","description","setDescription","categoryId","setCategoryId","actorId","setActorId","countryId","setCountryId","category","state","product","actor","country","console","log","dispatch","handleClose","form","FormData","append","handleShow","createCategoryList","categories","options","push","value","_id","createCountryList","countries","createActorList","actors","renderFilms","fontSize","products","length","map","film","display","justifyContent","e","target","categoryList","option","countryList","actorList"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,yBAAvB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6CC,KAA7C,QAA0D,iBAA1D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,2BAAtB;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,WAAlC,EAA+CC,aAA/C,QAAoE,eAApE;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACkB,GAAD,EAAMC,MAAN,IAAgBnB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACwB,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC0B,SAAD,EAAYC,YAAZ,IAA4B3B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM4B,QAAQ,GAAG9B,WAAW,CAAE+B,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAME,OAAO,GAAGhC,WAAW,CAAE+B,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAA3B;AACA,QAAMC,KAAK,GAAGjC,WAAW,CAAC+B,KAAK,IAAIA,KAAK,CAACE,KAAhB,CAAzB;AACA,QAAMC,OAAO,GAAGlC,WAAW,CAAE+B,KAAD,IAAWA,KAAK,CAACG,OAAlB,CAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,QAAMK,QAAQ,GAAGtC,WAAW,EAA5B;AACAoC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA7B,EAAAA,SAAS,CAAC,MAAM;AACZkC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAC,IAAAA,QAAQ,CAACjC,cAAc,EAAf,CAAR;AACAiC,IAAAA,QAAQ,CAAC/B,WAAW,EAAZ,CAAR;AACA+B,IAAAA,QAAQ,CAAC9B,aAAa,EAAd,CAAR;AACH,GALQ,EAKN,EALM,CAAT;;AAMA,QAAM+B,WAAW,GAAG,MAAM;AACtB,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoB7B,IAApB;AACA2B,IAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqB3B,KAArB;AACAyB,IAAAA,IAAI,CAACE,MAAL,CAAY,KAAZ,EAAmBzB,GAAnB;AACAuB,IAAAA,IAAI,CAACE,MAAL,CAAY,WAAZ,EAAyBvB,SAAzB;AACAqB,IAAAA,IAAI,CAACE,MAAL,CAAY,aAAZ,EAA2BnB,WAA3B;;AAEA,SAAK,IAAIQ,QAAT,IAAqBN,UAArB,EAAiC;AAC/Be,MAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBX,QAAxB;AACD;;AACD,SAAK,IAAIA,QAAT,IAAqBJ,OAArB,EAA8B;AAC1Ba,MAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBX,QAAxB;AACH;;AACD,SAAK,IAAIA,QAAT,IAAqBF,SAArB,EAAgC;AAC5BW,MAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBX,QAAxB;AACH,KAhBqB,CAiBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAO,IAAAA,QAAQ,CAAChC,OAAO,CAACkC,IAAD,CAAR,CAAR,CA5BsB,CA6BtB;;AACAxB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAI,IAAAA,MAAM,CAAC,EAAD,CAAN;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,MAAM,CAAC,EAAD,CAAN;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAI,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAF,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAhB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAxCD;;AAyCA,QAAM+B,UAAU,GAAG,MAAM/B,OAAO,CAAC,IAAD,CAAhC;;AAEA,QAAMgC,kBAAkB,GAAG,CAACC,UAAD,EAAaC,OAAO,GAAG,EAAvB,KAA8B;AACrD,SAAK,IAAIf,QAAT,IAAqBc,UAArB,EAAiC;AAC7BC,MAAAA,OAAO,CAACC,IAAR,CAAa;AAAEC,QAAAA,KAAK,EAAEjB,QAAQ,CAACkB,GAAlB;AAAuBpC,QAAAA,IAAI,EAAEkB,QAAQ,CAAClB;AAAtC,OAAb;AACH;;AACD,WAAOiC,OAAP;AACH,GALD;;AAMA,QAAMI,iBAAiB,GAAG,CAACC,SAAD,EAAYL,OAAO,GAAG,EAAtB,KAA6B;AACnD,SAAK,IAAIX,OAAT,IAAoBgB,SAApB,EAA+B;AAC3BL,MAAAA,OAAO,CAACC,IAAR,CAAa;AAAEC,QAAAA,KAAK,EAAEb,OAAO,CAACc,GAAjB;AAAsBpC,QAAAA,IAAI,EAAEsB,OAAO,CAACtB;AAApC,OAAb;AACH;;AACD,WAAOiC,OAAP;AACH,GALD;;AAOA,QAAMM,eAAe,GAAG,CAACC,MAAD,EAASP,OAAO,GAAG,EAAnB,KAA0B;AAC9C,SAAK,IAAIZ,KAAT,IAAkBmB,MAAlB,EAA0B;AACtBP,MAAAA,OAAO,CAACC,IAAR,CAAa;AAAEC,QAAAA,KAAK,EAAEd,KAAK,CAACe,GAAf;AAAoBpC,QAAAA,IAAI,EAAEqB,KAAK,CAACrB;AAAhC,OAAb;AACH;;AACD,WAAOiC,OAAP;AACH,GALD;;AAOA,QAAMQ,WAAW,GAAG,MAAM;AACtB,wBACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AAAgC,MAAA,UAAU,EAAC,IAA3C;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBACGtB,OAAO,CAACuB,QAAR,CAAiBC,MAAjB,GAA0B,CAA1B,GACGxB,OAAO,CAACuB,QAAR,CAAiBE,GAAjB,CAAsBC,IAAD,iBACnB;AAAA,kCAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,sBAAKA,IAAI,CAAC9C;AAAV;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA,sBAAK8C,IAAI,CAAC5C;AAAV;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAA,sBAAK4C,IAAI,CAAC5B,QAAL,CAAclB;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA,WAEO8C,IAAI,CAACV,GAFZ;AAAA;AAAA;AAAA;AAAA,gBADF,CADH,GAYG;AAbN;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD,GA5BH;;AA6BA,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAA,4BACI,QAAC,SAAD;AAAA,8BACI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA,iCACI;AAAK,YAAA,KAAK,EAAE;AAAEW,cAAAA,OAAO,EAAE,MAAX;AAAmBC,cAAAA,cAAc,EAAE;AAAnC,aAAZ;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,SAAS,EAAC,iBAAlB;AAAoC,cAAA,OAAO,EAAElB,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEhC,IAAb;AAAmB,MAAA,MAAM,EAAE4B,WAA3B;AAAA,8BACI,QAAC,KAAD,CAAO,MAAP;AAAA,+BACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA,gCACI,QAAC,KAAD;AACI,UAAA,KAAK,EAAC,MADV;AAEI,UAAA,KAAK,EAAE1B,IAFX;AAGI,UAAA,WAAW,EAAC,qBAHhB;AAII,UAAA,QAAQ,EAAGiD,CAAD,IAAO;AAAEhD,YAAAA,OAAO,CAACgD,CAAC,CAACC,MAAF,CAASf,KAAV,CAAP;AAAyB;AAJhD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,KAAD;AACI,UAAA,KAAK,EAAC,cADV;AAEI,UAAA,KAAK,EAAEjC,KAFX;AAGI,UAAA,WAAW,EAAC,6BAHhB;AAII,UAAA,QAAQ,EAAG+C,CAAD,IAAO;AAAE9C,YAAAA,QAAQ,CAAC8C,CAAC,CAACC,MAAF,CAASf,KAAV,CAAR;AAA0B;AAJjD;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAaI,QAAC,KAAD;AACI,UAAA,KAAK,EAAC,OADV;AAEI,UAAA,KAAK,EAAE/B,GAFX;AAGI,UAAA,WAAW,EAAC,eAHhB;AAII,UAAA,QAAQ,EAAG6C,CAAD,IAAO;AAAE5C,YAAAA,MAAM,CAAC4C,CAAC,CAACC,MAAF,CAASf,KAAV,CAAN;AAAwB;AAJ/C;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAmBI,QAAC,KAAD;AACI,UAAA,KAAK,EAAC,YADV;AAEI,UAAA,KAAK,EAAE7B,SAFX;AAGI,UAAA,WAAW,EAAC,2BAHhB;AAII,UAAA,QAAQ,EAAG2C,CAAD,IAAO;AAAE1C,YAAAA,YAAY,CAAC0C,CAAC,CAACC,MAAF,CAASf,KAAV,CAAZ;AAA8B;AAJrD;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAyBI,QAAC,KAAD;AACI,UAAA,KAAK,EAAC,UADV;AAEI,UAAA,KAAK,EAAE3B,GAFX;AAGI,UAAA,WAAW,EAAC,WAHhB;AAII,UAAA,QAAQ,EAAGyC,CAAD,IAAO;AAAExC,YAAAA,MAAM,CAACwC,CAAC,CAACC,MAAF,CAASf,KAAV,CAAN;AAAwB;AAJ/C;AAAA;AAAA;AAAA;AAAA,gBAzBJ,eA+BI,QAAC,KAAD;AACI,UAAA,KAAK,EAAC,aADV;AAEI,UAAA,KAAK,EAAEzB,WAFX;AAGI,UAAA,WAAW,EAAC,uBAHhB;AAII,UAAA,QAAQ,EAAGuC,CAAD,IAAO;AAAEtC,YAAAA,cAAc,CAACsC,CAAC,CAACC,MAAF,CAASf,KAAV,CAAd;AAAgC;AAJvD;AAAA;AAAA;AAAA;AAAA,gBA/BJ,kCAsCI;AACI,UAAA,SAAS,EAAC,cADd;AAEI,UAAA,KAAK,EAAEvB,UAFX;AAGI,UAAA,QAAQ,EAAGqC,CAAD,IAAOpC,aAAa,CAACoC,CAAC,CAACC,MAAF,CAASf,KAAV,CAHlC;AAAA,kCAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,EAMKJ,kBAAkB,CAACb,QAAQ,CAACiC,YAAV,CAAlB,CAA0CN,GAA1C,CAA+CO,MAAD,iBAC3C;AAA2B,YAAA,KAAK,EAAEA,MAAM,CAACjB,KAAzC;AAAA,sBACKiB,MAAM,CAACpD;AADZ,aAAaoD,MAAM,CAACjB,KAApB;AAAA;AAAA;AAAA;AAAA,kBADH,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtCJ,iCAmDI;AACI,UAAA,SAAS,EAAC,cADd;AAEI,UAAA,KAAK,EAAEnB,SAFX;AAGI,UAAA,QAAQ,EAAGiC,CAAD,IAAOhC,YAAY,CAACgC,CAAC,CAACC,MAAF,CAASf,KAAV,CAHjC;AAAA,kCAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,EAMKE,iBAAiB,CAACf,OAAO,CAAC+B,WAAT,CAAjB,CAAuCR,GAAvC,CAA4CO,MAAD,iBACxC;AAA2B,YAAA,KAAK,EAAEA,MAAM,CAACjB,KAAzC;AAAA,sBACKiB,MAAM,CAACpD;AADZ,aAAaoD,MAAM,CAACjB,KAApB;AAAA;AAAA;AAAA;AAAA,kBADH,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnDJ,+BAgEI;AACI,UAAA,SAAS,EAAC,cADd;AAEI,UAAA,KAAK,EAAErB,OAFX;AAGI,UAAA,QAAQ,EAAGmC,CAAD,IAAOlC,UAAU,CAACkC,CAAC,CAACC,MAAF,CAASf,KAAV,CAH/B;AAAA,kCAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,EAMKI,eAAe,CAAClB,KAAK,CAACiC,SAAP,CAAf,CAAiCT,GAAjC,CAAsCO,MAAD,iBAClC;AAA2B,YAAA,KAAK,EAAEA,MAAM,CAACjB,KAAzC;AAAA,sBACKiB,MAAM,CAACpD;AADZ,aAAaoD,MAAM,CAACjB,KAApB;AAAA;AAAA;AAAA;AAAA,kBADH,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhEJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAiFI,QAAC,KAAD,CAAO,MAAP;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAET,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAjFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwGH,CA5NM;;GAAM9B,I;UAWQR,W,EACDA,W,EACFA,W,EACEA,W,EAECD,W;;;KAhBRS,I","sourcesContent":["import { Layout } from \"../../components/Layout\";\nimport { Container, Row, Col, Modal, Button, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { Input } from \"../../components/UI/Input\";\nimport { getAllCategory, addFilm, getAllActor, getAllCountry } from \"../../actions\";\n\nexport const Film = (props) => {\n    const [show, setShow] = useState(false);\n    const [name, setName] = useState('')\n    const [ename, setEname] = useState('')\n    const [img, setImg] = useState('')\n    const [largerImg, setLargerImg] = useState('')\n    const [url, setUrl] = useState('')\n    const [description, setDescription] = useState('')\n    const [categoryId, setCategoryId] = useState(\"\");\n    const [actorId, setActorId] = useState(\"\");\n    const [countryId, setCountryId] = useState(\"\");\n    const category = useSelector((state) => state.category);\n    const product = useSelector((state) => state.product);\n    const actor = useSelector(state => state.actor)\n    const country = useSelector((state) => state.country);\n    console.log(product)\n    const dispatch = useDispatch();\n    console.log(category)\n    useEffect(() => {\n        console.log('category.js')\n        dispatch(getAllCategory())\n        dispatch(getAllActor())\n        dispatch(getAllCountry())\n    }, [])\n    const handleClose = () => {\n        const form = new FormData();\n        form.append(\"name\", name);\n        form.append(\"ename\", ename);\n        form.append(\"img\", img);\n        form.append(\"largerImg\", largerImg);\n        form.append(\"description\", description);\n        \n        for (let category of categoryId) {\n          form.append(\"category\", category);\n        }\n        for (let category of actorId) {\n            form.append(\"category\", category);\n        }\n        for (let category of countryId) {\n            form.append(\"category\", category);\n        }\n        // const newFilm = {\n        //     name: name,\n        //     ename: ename,\n        //     img: img,\n        //     largerImg: largerImg,\n        //     url: url,\n        //     description: description,\n        //     category: categoryId,\n        //     actor: actorId,\n        //     country: countryId\n        // } \n        dispatch(addFilm(form))\n        // console.log(cat)\n        setEname('')\n        setName('')\n        setImg('')\n        setLargerImg('')\n        setUrl('')\n        setDescription('')\n        setCategoryId('')\n        setCountryId('')\n        setActorId('')\n        setShow(false)\n    };\n    const handleShow = () => setShow(true);\n\n    const createCategoryList = (categories, options = []) => {\n        for (let category of categories) {\n            options.push({ value: category._id, name: category.name });\n        }\n        return options;\n    };\n    const createCountryList = (countries, options = []) => {\n        for (let country of countries) {\n            options.push({ value: country._id, name: country.name });\n        }\n        return options;\n    };\n\n    const createActorList = (actors, options = []) => {\n        for (let actor of actors) {\n            options.push({ value: actor._id, name: actor.name });\n        }\n        return options;\n    };\n\n    const renderFilms = () => {\n        return (\n          <Table style={{ fontSize: 12 }} responsive=\"sm\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>English name</th>\n                <th>Category</th>\n              </tr>\n            </thead>\n            <tbody>\n              {product.products.length > 0\n                ? product.products.map((film) => (\n                    <tr\n                    //   onClick={() => showProductDetailsModal(product)}\n                      key={film._id}\n                    >\n                      <td>2</td>\n                      <td>{film.name}</td>\n                      <td>{film.ename}</td>\n                      <td>{film.category.name}</td>\n                    </tr>\n                  ))\n                : null}\n            </tbody>\n          </Table>\n        );\n      };\n    return (\n        <Layout sidebar>\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                            <h3>Films</h3>\n                            <button className=\"btn btn-primary\" onClick={handleShow}>Add</button>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    {/* {renderFilms()} */}\n                </Row>\n            </Container>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Add New Category</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Input\n                        label=\"Name\"\n                        value={name}\n                        placeholder='Enter new name film'\n                        onChange={(e) => { setName(e.target.value) }}\n                    />\n                    <Input\n                        label=\"English name\"\n                        value={ename}\n                        placeholder='Enter new english name film'\n                        onChange={(e) => { setEname(e.target.value) }}\n                    />\n                    <Input\n                        label=\"image\"\n                        value={img}\n                        placeholder='Enter new img'\n                        onChange={(e) => { setImg(e.target.value) }}\n                    />\n                    <Input\n                        label=\"Larger img\"\n                        value={largerImg}\n                        placeholder='Enter new larger img film'\n                        onChange={(e) => { setLargerImg(e.target.value) }}\n                    />\n                    <Input\n                        label=\"URL film\"\n                        value={url}\n                        placeholder='Enter url'\n                        onChange={(e) => { setUrl(e.target.value) }}\n                    />\n                    <Input\n                        label=\"Description\"\n                        value={description}\n                        placeholder='Enter new description'\n                        onChange={(e) => { setDescription(e.target.value) }}\n                    />\n                    Select category\n                    <select\n                        className=\"form-control\"\n                        value={categoryId}\n                        onChange={(e) => setCategoryId(e.target.value)}\n                    >\n                        <option>select category</option>\n                        {createCategoryList(category.categoryList).map((option) => (\n                            <option key={option.value} value={option.value}>\n                                {option.name}\n                            </option>\n                        ))}\n                    </select>\n                    Select country\n                    <select\n                        className=\"form-control\"\n                        value={countryId}\n                        onChange={(e) => setCountryId(e.target.value)}\n                    >\n                        <option>select country</option>\n                        {createCountryList(country.countryList).map((option) => (\n                            <option key={option.value} value={option.value}>\n                                {option.name}\n                            </option>\n                        ))}\n                    </select>\n                    Select actor\n                    <select\n                        className=\"form-control\"\n                        value={actorId}\n                        onChange={(e) => setActorId(e.target.value)}\n                    >\n                        <option>select actor</option>\n                        {createActorList(actor.actorList).map((option) => (\n                            <option key={option.value} value={option.value}>\n                                {option.name}\n                            </option>\n                        ))}\n                    </select>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Layout>\n    )\n} "]},"metadata":{},"sourceType":"module"}