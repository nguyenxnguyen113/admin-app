{"ast":null,"code":"import { categoryConstants } from \"../actions/constants\";\nconst initState = {\n  categoryList: [],\n  loading: false,\n  error: null\n};\n\nconst buildNewCategories = (parentId, categories, category) => {\n  let myCategories = [];\n\n  if (parentId === undefined) {\n    return [...categories, {\n      _id: category._id,\n      name: category.name,\n      slug: category.slug\n    }];\n  }\n\n  for (let cat of categories) {\n    if (cat._id == parentId) {\n      const newCategory = {\n        _id: category._id,\n        name: category.name,\n        slug: category.slug\n      };\n      myCategories.push({ ...cat\n      });\n    } else {\n      myCategories.push({ ...cat\n      });\n    }\n  }\n\n  return myCategories;\n};\n\nexport default ((state = initState, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n      const category = action.payload.category;\n      const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\n      console.log('updated categoires', updatedCategories);\n      state = { ...state,\n        categories: updatedCategories,\n        loading: false\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n      state = { ...initState,\n        loading: false,\n        error: action.payload.error\n      };\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/Users/nguyenxuannguyen/movie-mern/admin-app/src/reducers/category.reducer.js"],"names":["categoryConstants","initState","categoryList","loading","error","buildNewCategories","parentId","categories","category","myCategories","undefined","_id","name","slug","cat","newCategory","push","state","action","console","log","type","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","payload","updatedCategories","ADD_NEW_CATEGORY_FAILURE"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,sBAAlC;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,YAAY,EAAE,EADA;AAEdC,EAAAA,OAAO,EAAE,KAFK;AAGdC,EAAAA,KAAK,EAAE;AAHO,CAAlB;;AAKA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWC,UAAX,EAAuBC,QAAvB,KAAoC;AAC3D,MAAIC,YAAY,GAAG,EAAnB;;AAEA,MAAIH,QAAQ,KAAKI,SAAjB,EAA4B;AACxB,WAAO,CACH,GAAGH,UADA,EAEH;AACII,MAAAA,GAAG,EAAEH,QAAQ,CAACG,GADlB;AAEIC,MAAAA,IAAI,EAAEJ,QAAQ,CAACI,IAFnB;AAGIC,MAAAA,IAAI,EAAEL,QAAQ,CAACK;AAHnB,KAFG,CAAP;AAQH;;AAED,OAAK,IAAIC,GAAT,IAAgBP,UAAhB,EAA4B;AAExB,QAAIO,GAAG,CAACH,GAAJ,IAAWL,QAAf,EAAyB;AACrB,YAAMS,WAAW,GAAG;AAChBJ,QAAAA,GAAG,EAAEH,QAAQ,CAACG,GADE;AAEhBC,QAAAA,IAAI,EAAEJ,QAAQ,CAACI,IAFC;AAGhBC,QAAAA,IAAI,EAAEL,QAAQ,CAACK;AAHC,OAApB;AAKAJ,MAAAA,YAAY,CAACO,IAAb,CAAkB,EACd,GAAGF;AADW,OAAlB;AAGH,KATD,MASO;AACHL,MAAAA,YAAY,CAACO,IAAb,CAAkB,EACd,GAAGF;AADW,OAAlB;AAGH;AACJ;;AACD,SAAOL,YAAP;AACH,CAhCD;;AAiCA,gBAAe,CAACQ,KAAK,GAAGhB,SAAT,EAAoBiB,MAApB,KAA+B;AAE1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKrB,iBAAiB,CAACsB,wBAAvB;AACIL,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJd,QAAAA,OAAO,EAAE;AAFL,OAAR;AAIA;;AACJ,SAAKH,iBAAiB,CAACuB,wBAAvB;AACI,YAAMf,QAAQ,GAAGU,MAAM,CAACM,OAAP,CAAehB,QAAhC;AACA,YAAMiB,iBAAiB,GAAGpB,kBAAkB,CAACG,QAAQ,CAACF,QAAV,EAAoBW,KAAK,CAACV,UAA1B,EAAsCC,QAAtC,CAA5C;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCK,iBAAlC;AAEAR,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJV,QAAAA,UAAU,EAAEkB,iBAFR;AAGJtB,QAAAA,OAAO,EAAE;AAHL,OAAR;AAKA;;AACJ,SAAKH,iBAAiB,CAAC0B,wBAAvB;AACIT,MAAAA,KAAK,GAAG,EACJ,GAAGhB,SADC;AAEJE,QAAAA,OAAO,EAAE,KAFL;AAGJC,QAAAA,KAAK,EAAEc,MAAM,CAACM,OAAP,CAAepB;AAHlB,OAAR;AAKA;AAxBR;;AA0BA,SAAOa,KAAP;AACH,CA/BD","sourcesContent":["import { categoryConstants } from \"../actions/constants\";\n\nconst initState = {\n    categoryList: [],\n    loading: false,\n    error: null\n}\nconst buildNewCategories = (parentId, categories, category) => {\n    let myCategories = [];\n\n    if (parentId === undefined) {\n        return [\n            ...categories,\n            {\n                _id: category._id,\n                name: category.name,\n                slug: category.slug,\n            }\n        ];\n    }\n\n    for (let cat of categories) {\n\n        if (cat._id == parentId) {\n            const newCategory = {\n                _id: category._id,\n                name: category.name,\n                slug: category.slug,\n            };\n            myCategories.push({\n                ...cat,\n            })\n        } else {\n            myCategories.push({\n                ...cat,\n            });\n        }\n    }\n    return myCategories;\n}\nexport default (state = initState, action) => {\n\n    console.log(action);\n\n    switch (action.type) {\n        case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n            const category = action.payload.category;\n            const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\n            console.log('updated categoires', updatedCategories);\n\n            state = {\n                ...state,\n                categories: updatedCategories,\n                loading: false,\n            }\n            break;\n        case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n            state = {\n                ...initState,\n                loading: false,\n                error: action.payload.error\n            }\n            break;\n    }\n    return state;\n}"]},"metadata":{},"sourceType":"module"}