{"ast":null,"code":"import { countryConstansts } from \"../actions/constants\";\nconst initState = {\n  countryList: [],\n  loading: false,\n  error: null\n};\n\nconst buildNewCategories = (parentId, categories, category) => {\n  let myCountries = [];\n\n  for (let cat of categories) {\n    const newCategory = {\n      _id: category._id,\n      name: category.name,\n      slug: category.slug\n    };\n    myCountries.push({ ...cat\n    });\n  }\n\n  return myCountries;\n};\n\nexport default ((state = initState, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case countryConstansts.GET_ALL_COUNTRY_SUCCESS:\n      state = { ...state,\n        countryList: action.payload.countryList\n      };\n      break;\n\n    case countryConstansts.ADD_NEW_COUNTRY_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case countryConstansts.ADD_NEW_COUNTRY_SUCCESS:\n      const country = action.payload.country;\n      const updatedCountries = buildNewCategories(country._id, state.countryList, country);\n      console.log('updated category', updatedCountries);\n      state = { ...state,\n        countryList: updatedCountries,\n        loading: false\n      };\n      break;\n\n    case countryConstansts.ADD_NEW_COUNTRY_FAILURE:\n      state = {\n        initState\n      };\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/Users/nguyenxuannguyen/movie-mern/admin-app/src/reducers/country.reducers.js"],"names":["countryConstansts","initState","countryList","loading","error","buildNewCategories","parentId","categories","category","myCountries","cat","newCategory","_id","name","slug","push","state","action","console","log","type","GET_ALL_COUNTRY_SUCCESS","payload","ADD_NEW_COUNTRY_REQUEST","ADD_NEW_COUNTRY_SUCCESS","country","updatedCountries","ADD_NEW_COUNTRY_FAILURE"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,sBAAlC;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,WAAW,EAAE,EADC;AAEdC,EAAAA,OAAO,EAAE,KAFK;AAGdC,EAAAA,KAAK,EAAE;AAHO,CAAlB;;AAMA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAUC,UAAV,EAAsBC,QAAtB,KAAmC;AAC1D,MAAIC,WAAW,GAAG,EAAlB;;AAEA,OAAI,IAAIC,GAAR,IAAeH,UAAf,EAA2B;AACvB,UAAMI,WAAW,GAAG;AAChBC,MAAAA,GAAG,EAAEJ,QAAQ,CAACI,GADE;AAEhBC,MAAAA,IAAI,EAAEL,QAAQ,CAACK,IAFC;AAGhBC,MAAAA,IAAI,EAAEN,QAAQ,CAACM;AAHC,KAApB;AAKAL,IAAAA,WAAW,CAACM,IAAZ,CAAiB,EACb,GAAGL;AADU,KAAjB;AAIH;;AACD,SAAOD,WAAP;AACH,CAfD;;AAiBA,gBAAe,CAACO,KAAK,GAAGf,SAAT,EAAoBgB,MAApB,KAA+B;AAE1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKpB,iBAAiB,CAACqB,uBAAvB;AACIL,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJd,QAAAA,WAAW,EAAEe,MAAM,CAACK,OAAP,CAAepB;AAFxB,OAAR;AAIA;;AACJ,SAAKF,iBAAiB,CAACuB,uBAAvB;AACIP,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJb,QAAAA,OAAO,EAAE;AAFL,OAAR;AAIA;;AACJ,SAAKH,iBAAiB,CAACwB,uBAAvB;AACI,YAAMC,OAAO,GAAGR,MAAM,CAACK,OAAP,CAAeG,OAA/B;AACA,YAAMC,gBAAgB,GAAGrB,kBAAkB,CAACoB,OAAO,CAACb,GAAT,EAAaI,KAAK,CAACd,WAAnB,EAAgCuB,OAAhC,CAA3C;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCO,gBAAhC;AACAV,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJd,QAAAA,WAAW,EAAEwB,gBAFT;AAGJvB,QAAAA,OAAO,EAAE;AAHL,OAAR;AAKA;;AACJ,SAAKH,iBAAiB,CAAC2B,uBAAvB;AACIX,MAAAA,KAAK,GAAG;AACJf,QAAAA;AADI,OAAR;AAGA;AA3BR;;AA6BA,SAAOe,KAAP;AACH,CAlCD","sourcesContent":["import { countryConstansts } from \"../actions/constants\";\n\nconst initState = {\n    countryList: [],\n    loading: false,\n    error: null\n}\n\nconst buildNewCategories = (parentId,categories, category) => {\n    let myCountries = []\n\n    for(let cat of categories) {\n        const newCategory = {\n            _id: category._id,\n            name: category.name,\n            slug: category.slug,\n        };\n        myCountries.push({\n            ...cat,\n\n        });\n    }\n    return myCountries\n}\n\nexport default (state = initState, action) => {\n\n    console.log(action);\n\n    switch (action.type) {\n        case countryConstansts.GET_ALL_COUNTRY_SUCCESS:\n            state = {\n                ...state,\n                countryList: action.payload.countryList\n            }\n            break;\n        case countryConstansts.ADD_NEW_COUNTRY_REQUEST:\n            state = {\n                ...state,\n                loading: true,\n            }\n            break;\n        case countryConstansts.ADD_NEW_COUNTRY_SUCCESS:\n            const country = action.payload.country\n            const updatedCountries = buildNewCategories(country._id,state.countryList, country)\n            console.log('updated category', updatedCountries)\n            state = {\n                ...state,\n                countryList: updatedCountries,\n                loading: false\n            }  \n            break;\n        case countryConstansts.ADD_NEW_COUNTRY_FAILURE:\n            state = {\n                initState\n            }\n            break;\n    }\n    return state;\n}"]},"metadata":{},"sourceType":"module"}