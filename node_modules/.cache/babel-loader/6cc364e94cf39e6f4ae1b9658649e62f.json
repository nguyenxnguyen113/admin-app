{"ast":null,"code":"// import category from \"../../../movie-backend/src/models/category\";\nimport axios from \"../helpers.js/axios\";\nimport { categoryConstants } from \"./constants\";\nexport const getAllCategory = () => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.GET_ALL_CATEGORIES_REQUEST\n    });\n    const res = await axios.get(`category/getcategory`);\n    console.log(res);\n    const {\n      categories\n    } = res.data;\n\n    if (res.status === 200) {\n      dispatch({\n        type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\n        payload: {\n          categoryList: categories\n        }\n      });\n    } else {\n      dispatch({\n        type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};\nexport const addCategory = form => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.ADD_NEW_CATEGORY_REQUEST\n    });\n\n    try {\n      const res = await axios.post(`/category/create`, form);\n\n      if (res.status === 201) {\n        dispatch({\n          type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\n          payload: {\n            category: res.data.category\n          }\n        });\n      } else {\n        dispatch({\n          type: categoryConstansts.ADD_NEW_CATEGORY_FAILURE,\n          payload: res.data.error\n        });\n      }\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n};","map":{"version":3,"sources":["/Users/nguyenxuannguyen/movie-mern/admin-app/src/actions/category.actions.js"],"names":["axios","categoryConstants","getAllCategory","dispatch","type","GET_ALL_CATEGORIES_REQUEST","res","get","console","log","categories","data","status","GET_ALL_CATEGORIES_SUCCESS","payload","categoryList","GET_ALL_CATEGORIES_FAILURE","error","addCategory","form","ADD_NEW_CATEGORY_REQUEST","post","ADD_NEW_CATEGORY_SUCCESS","category","categoryConstansts","ADD_NEW_CATEGORY_FAILURE","response"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,SAASC,iBAAT,QAAkC,aAAlC;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,SAAO,MAAOC,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEH,iBAAiB,CAACI;AADnB,KAAD,CAAR;AAGA,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,sBAAX,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAiBJ,GAAG,CAACK,IAA3B;;AACA,QAAIL,GAAG,CAACM,MAAJ,KAAe,GAAnB,EAAwB;AACpBT,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEH,iBAAiB,CAACY,0BADnB;AAELC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,YAAY,EAAEL;AAAhB;AAFJ,OAAD,CAAR;AAIH,KALD,MAKO;AACHP,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEH,iBAAiB,CAACe,0BADnB;AAELF,QAAAA,OAAO,EAAE;AAACG,UAAAA,KAAK,EAAEX,GAAG,CAACK,IAAJ,CAASM;AAAjB;AAFJ,OAAD,CAAR;AAIH;AACJ,GAlBD;AAmBH,CApBM;AAsBP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACjC,SAAO,MAAMhB,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,iBAAiB,CAACmB;AAA1B,KAAD,CAAR;;AACA,QAAI;AACA,YAAMd,GAAG,GAAG,MAAMN,KAAK,CAACqB,IAAN,CAAY,kBAAZ,EAA+BF,IAA/B,CAAlB;;AACA,UAAIb,GAAG,CAACM,MAAJ,KAAe,GAAnB,EAAwB;AACpBT,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEH,iBAAiB,CAACqB,wBADnB;AAELR,UAAAA,OAAO,EAAE;AAAES,YAAAA,QAAQ,EAAEjB,GAAG,CAACK,IAAJ,CAASY;AAArB;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACHpB,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEoB,kBAAkB,CAACC,wBADpB;AAELX,UAAAA,OAAO,EAAER,GAAG,CAACK,IAAJ,CAASM;AAFb,SAAD,CAAR;AAIH;AACJ,KAbD,CAaE,OAAOA,KAAP,EAAc;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACS,QAAlB;AACH;AAEJ,GAnBD;AAoBH,CArBM","sourcesContent":["// import category from \"../../../movie-backend/src/models/category\";\nimport axios from \"../helpers.js/axios\";\nimport { categoryConstants } from \"./constants\";\n\nexport const getAllCategory = () => {\n    return async (dispatch) => {\n        dispatch({\n            type: categoryConstants.GET_ALL_CATEGORIES_REQUEST,\n        })\n        const res = await axios.get(`category/getcategory`)\n        console.log(res)\n        const { categories } = res.data\n        if (res.status === 200) {\n            dispatch({\n                type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\n                payload: { categoryList: categories }\n            })\n        } else {\n            dispatch({\n                type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\n                payload: {error: res.data.error}\n            })\n        }\n    }\n}\n\nexport const addCategory = (form) => {\n    return async dispatch => {\n        dispatch({ type: categoryConstants.ADD_NEW_CATEGORY_REQUEST });\n        try {\n            const res = await axios.post(`/category/create`, form);\n            if (res.status === 201) {\n                dispatch({\n                    type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\n                    payload: { category: res.data.category }\n                });\n            } else {\n                dispatch({\n                    type: categoryConstansts.ADD_NEW_CATEGORY_FAILURE,\n                    payload: res.data.error\n                });\n            }\n        } catch (error) {   \n            console.log(error.response);\n        }\n\n    }\n}"]},"metadata":{},"sourceType":"module"}